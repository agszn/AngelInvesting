# Generated by Django 5.1.4 on 2025-06-02 15:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('site_Manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('user_type', models.CharField(choices=[('RM', 'Relationship Manager'), ('AC', 'Accounts'), ('SM', 'Site Manager'), ('ST', 'Share Transfer'), ('AD', 'Admin'), ('DF', 'Default User'), ('AP', 'Associate Partner'), ('PT', 'Partner')], default='DF', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', 'Enter valid phone number')])),
                ('mobile_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', 'Enter valid phone number')])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{5}[0-9]{3,4}[A-Z]$', 'Enter valid PAN number')])),
                ('pan_card_photo', models.ImageField(blank=True, null=True, upload_to='pan_cards/')),
                ('adhar_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{12}$', 'Enter valid 12-digit Aadhaar number')])),
                ('adhar_card_photo', models.ImageField(blank=True, null=True, upload_to='adhar_cards/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('custom_user_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CMRCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id_input', models.CharField(blank=True, max_length=50, null=True)),
                ('client_id_input', models.CharField(blank=True, max_length=50, null=True)),
                ('cmr_file', models.FileField(blank=True, help_text='Upload a scanned copy or PDF', null=True, upload_to='cmr_files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cmr_copies', to='site_Manager.broker')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cmr_copies', to='user_auth.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder_name', models.CharField(max_length=100)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20)),
                ('account_type', models.CharField(choices=[('saving', 'Saving'), ('current', 'Current'), ('salary', 'Salary'), ('nre', 'NRE'), ('nro', 'NRO')], max_length=10)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('closed', 'Closed')], max_length=10)),
                ('linked_phone_number', models.CharField(max_length=15)),
                ('ifsc_code', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid IFSC code (e.g., SBIN0001234)', regex='^[A-Z]{4}0[0-9A-Z]{6}$')])),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='user_auth.userprofile')),
            ],
        ),
    ]
